crds:
  keep: false

global:
  domain: ""
  addPrometheusAnnotations: true
  logging:
    level: debug
  env:
    - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: argo-server-sso
          key: client-secret

controller:
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    failureThreshold: 10
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

configs:
  cm:
    statusbadge.enabled: true
    dex.config: |
      connectors:
        # GitHub example
        - type: github
          id: github
          name: GitHub
          config:
            clientID: Ov23liOTJv1jQVluNUhY
            clientSecret: 4321ce4fd8737cba50c731314b03022c1857abe8
            orgs:
              - name: marchehub
            scopes:
              - read:org

      staticClients:
        # This is the OIDC client ID in plaintext should be same with client-id in workflows
        - id: argo-workflows
          name: Argo Workflow
          redirectURIs:
            - https://argoworkflows.{{ .Values.domain }}.com/oauth2/callback
          secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET

dex:
  enabled: true
  startupProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    failureThreshold: 20
    timeoutSeconds: 30
  readinessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 30
    failureThreshold: 20
    timeoutSeconds: 30
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 30
    failureThreshold: 20
    timeoutSeconds: 30
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

server:
  replicas: 1
  extensions:
    enabled: true
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    failureThreshold: 10
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    failureThreshold: 10
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    path: /
    pathType: Prefix
    tls: false

repoServer:
  replicas: 1
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    failureThreshold: 10
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    failureThreshold: 10
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

applicationSet:
  allowAnyNamespace: true
  replicas: 1
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    failureThreshold: 10
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    failureThreshold: 10
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

commitServer:
  enabled: true
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    failureThreshold: 10
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    failureThreshold: 10
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

notifications:
  enabled: true
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 30
    failureThreshold: 10
  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    failureThreshold: 10
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
