domain: example.com

alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - alertmanager.{{ .Values.domain }}
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: tls-domain
        hosts:
          - alertmanager.{{ .Values.domain }}
  alertmanagerSpec:
    replicas: 1
    retention: 120h
    logLevel: info
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: "rook-ceph-block"
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: 1
        memory: 512Mi

grafana:
  enabled: true
  defaultDashboardsTimezone: utc
  defaultDashboardsEditable: true
  defaultDashboardsInterval: 1m
  adminUser: admin
  adminPassword: prom-operator
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - grafana.{{ .Values.domain }}
    path: /
    tls:
      - secretName: tls-domain
        hosts:
          - grafana.{{ .Values.domain }}
  persistence:
    enabled: true
    type: sts
    storageClassName: "rook-ceph-block"
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    finalizers:
      - kubernetes.io/pvc-protection

prometheusOperator:
  enabled: true
  livenessProbe:
    enabled: true
    failureThreshold: 10
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    enabled: true
    failureThreshold: 10
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 200Mi

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - prometheus.{{ .Values.domain }}
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: tls-domain
        hosts:
          - prometheus.{{ .Values.domain }}
  prometheusSpec:
    replicas: 1
    retention: 120h
    logLevel: info
    serviceMonitorSelector:
      matchLabels:
        release: prometheus
    maximumStartupDurationSeconds: 120
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "rook-ceph-block"
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: 1
        memory: 512Mi
