mode: daemonset

image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s

command:
  name: otelcol-k8s

presets:
  logsCollection:
    enabled: true
    includeCollectorLogs: true
  hostMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: true
    extractAllPodLabels: true
    extractAllPodAnnotations: true
  kubeletMetrics:
    enabled: true

config:
  extensions:
    health_check:
      endpoint: 0.0.0.0:13133
  exporters:
    otlphttp/logs:
      endpoint: http://loki-gateway/otlp
      tls:
        insecure: true
    otlp:
      endpoint: tempo:4317
      tls:
        insecure: true
    debug: {}
  processors:
    batch: {}
    memory_limiter:
      check_interval: 300s
      limit_percentage: 75
      spike_limit_percentage: 20
  receivers:
    kubeletstats:
      collection_interval: 300s
      auth_type: 'serviceAccount'
      endpoint: '${env:K8S_NODE_NAME}:10250'
      insecure_skip_verify: true
      metric_groups:
        - node
        - pod
        - container
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:4318
    jaeger:
      protocols:
        grpc:
          endpoint: 0.0.0.0:14250
        thrift_http:
          endpoint: 0.0.0.0:14268
        thrift_compact:
          endpoint: 0.0.0.0:6831
    zipkin:
      endpoint: 0.0.0.0:9411
    prometheus:
      config: {} # already add serviceMonitor, disabled avoid duplicate collection
  service:
    telemetry:
      metrics:
        readers:
          - pull:
              exporter:
                prometheus:
                  host: 0.0.0.0
                  port: 8888
    extensions:
      - health_check
    pipelines:
      logs:
        exporters:
          - otlphttp/logs
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
      metrics:
        exporters:
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
          - prometheus
      traces:
        exporters:
          - otlp
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
          - jaeger
          - zipkin

resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 200m
    memory: 200Mi

startupProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  httpGet:
    port: 13133
    path: /

livenessProbe:
  initialDelaySeconds: 90
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 3
  httpGet:
    port: 13133
    path: /

readinessProbe:
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  httpGet:
    port: 13133
    path: /

ports:
  metrics:
    enabled: true
    containerPort: 8888
    servicePort: 8888
    protocol: TCP

ingress:
  enabled: true
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
  - host: ""
    paths:
      - path: /
        pathType: Prefix
        port: 4318

serviceMonitor:
  enabled: true
  metricsEndpoints:
    - port: metrics
      interval: 120s
  extraLabels:
    release: prometheus
