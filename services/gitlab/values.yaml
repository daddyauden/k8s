domain: example.com

global:
  time_zone: UTC
  edition: ce
  gitlabVersion: "18.1.1"
  storageClass: "rook-ceph-block"
  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1"
    configureCertmanager: false
    useNewIngressForCerts: false
    class: "nginx"
    provider: "nginx"
    tls:
      enabled: true
      secretName: tls-domain
    path: "/"
    pathType: Prefix
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    domain: {{ .Values.domain }}
    externalIP: 10.20.1.1
    https: false
    gitlab:
      https: true
      name: gitlab.{{ .Values.domain }}
    pages:
      https: true
      name: pages.{{ .Values.domain }}
    ssh: gitlab.{{ .Values.domain }}
  rails:
    bootsnap:
      enabled: false
  psql:
    host: postgresql
    port: 5432
    username: gitlab
    password:
      useSecret: true
      secret: postgres-secrets
      key: gitlab-password
    database: gitlabhq_production
    connectTimeout: 60
  redis:
    host: redis-master
    port: 6379
    database: 6
    auth:
      enabled: true
      secret: redis-secrets
      key: redis-password
  minio:
    enabled: false
  kas:
    enabled: false
  registry:
    enabled: false
  appConfig:
    object_store:
      enabled: true
      proxy_download: true
      connection:
        secret: gitlab-object-storage
        key: connection
    lfs:
      enabled: true
      proxy_download: true
      bucket: gitlab-lfs
    artifacts:
      enabled: true
      proxy_download: true
      bucket: gitlab-artifacts
    uploads:
      enabled: true
      proxy_download: true
      bucket: gitlab-uploads
    packages:
      enabled: true
      proxy_download: true
      bucket: gitlab-packages
    externalDiffs:
      enabled: true
      proxy_download: true
      bucket: gitlab-mr-diffs
    terraformState:
      enabled: true
      bucket: gitlab-terraform-state
    ciSecureFiles:
      enabled: true
      bucket: gitlab-ci-secure-files
    dependencyProxy:
      enabled: true
      bucket: gitlab-dependency-proxy
    backups:
      bucket: gitlab-backups
    microsoft_graph_mailer:
      enabled: false
    incomingEmail:
      enabled: false
    serviceDeskEmail:
      enabled: false
    cron_jobs: {}
    sentry:
      enabled: false
    gitlab_docs:
      enabled: false
    smartcard:
      enabled: false
    sidekiq:
      routingRules: []
  pages:
    enabled: true
    accessControl: false
    localStore:
      enabled: false
    objectStore:
      bucket: gitlab-pages
      enabled: true
      proxy_download: true
      connection:
        secret: gitlab-object-storage
        key: connection
  webservice:
    workerTimeout: 120
    extraEnv:
      GITLAB_RAILS_RACK_TIMEOUT: "60"
      GITLAB_RAILS_WAIT_TIMEOUT: "90"
  shell:
    port: 222
    tcp:
      proxyProtocol: true

gitlab:
  webservice:
    enabled: true
    minReplicas: 1
    maxReplicas: 1
    maxUnavailable: 0
    workerProcesses: 2
    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
    psql:
      password:
        secret: postgres-secrets
        key: gitlab-password
    redis:
      serviceName: redis-master
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    trusted_proxies:
      - 10.20.1.1/32
    workhorse:
      metrics:
        enabled: false
        serviceMonitor:
          enabled: false
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1
          memory: 2Gi
  sidekiq:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    maxUnavailable: 1
    metrics:
      enabled: false
    psql:
      password:
        secret: postgres-secrets
        key: gitlab-password
    redis:
      serviceName: redis-master
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    readinessProbe:
      initialDelaySeconds: 60
      periodSeconds: 20
      timeoutSeconds: 20
      successThreshold: 1
      failureThreshold: 10
    livenessProbe:
      initialDelaySeconds: 90
      periodSeconds: 15
      timeoutSeconds: 15
      successThreshold: 1
      failureThreshold: 10
  gitlab-shell:
    minReplicas: 1
    maxReplicas: 1
    service:
      type: NodePort
      nodePort: 30022
  toolbox:
    enabled: true
    replicas: 1
    migrations:
      enabled: false
    webservice:
      enabled: true
    gitlab-shell:
      enabled: true
    gitlab-pages:
      enabled: true
    backups:
      cron:
        enabled: false
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 350m
        memory: 350Mi
  gitaly:
    metrics:
      enabled: false
    persistence:
      storageClass: rook-ceph-block
      size: 50Gi
  gitlab-pages:
    rateLimitSubnetsAllowList:
      - "10.10.0.0/16"
      - "10.20.0.0/16"
      - "10.30.0.0/16"
      - "20.20.0.0/16"
      - "30.30.0.0/16"
      - "192.168.1.0/24"
    ingress:
      tls:
        secretName: tls-domain
  gitlab-exporter:
    enabled: true
    metrics:
      enabled: true
      port: 9168
      path: /metrics
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: prometheus

certmanager:
  install: false

installCertmanager: false

prometheus:
  install: false

postgresql:
  install: false

registry:
  enabled: false

gitlab-runner:
  install: false

redis:
  install: false

nginx-ingress:
  enabled: false

nginx-ingress-geo:
  enabled: false

gitlab-zoekt:
  install: false

traefik:
  install: false

haproxy:
  install: false